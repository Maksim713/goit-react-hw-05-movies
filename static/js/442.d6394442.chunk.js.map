{"version":3,"file":"static/js/442.d6394442.chunk.js","mappings":"gNACA,GAAgB,SAAW,uBAAuB,SAAW,uBAAuB,eAAiB,6BAA6B,SAAW,uBAAuB,KAAO,oB,mBCkD3K,MA3CA,WACE,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAmCE,EAAAA,EAAAA,UAAS,CAAC,SAAUF,EAAS,SAAS,kBACvEG,EAAAA,EAAAA,IAAkBH,EADqD,IAAjEI,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,KAAMC,EAAzB,EAAyBA,MAIzB,OACE,2BACGA,IAAS,oCAAYA,KACrBF,IAAa,wCACZE,IAAUF,IACV,4BACE,eAAIG,UAAWC,EAAAA,eAAf,kBACCH,EAAKI,MAAQJ,EAAKI,KAAKC,OAAS,GAC/B,eAAIH,UAAWC,EAAAA,SAAf,SACGH,EAAKI,KAAKE,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,UAAWC,EAAlB,EAAkBA,KAAMC,EAAxB,EAAwBA,aAAxB,OACb,gBAAaR,UAAWC,EAAAA,SAAxB,UACGO,GACC,gBACEC,IAAG,UAAKC,EAAAA,GAAL,OAAeF,GAClBG,IAAI,SACJC,MAAO,IACPC,OAAQ,OAGV,gBAAKJ,IAAG,UAAKK,GAAOH,IAAI,GAAGC,MAAO,IAAKC,OAAQ,OAEjD,iBAAKb,UAAWC,EAAAA,SAAhB,WACE,eAAID,UAAWC,EAAAA,KAAf,SAA0BM,KAC1B,eAAGP,UAAWC,EAAAA,KAAd,wBAAoCK,UAb/BD,EADI,OAoBjB,SAACU,EAAA,EAAD,SAMX,C,uDChDD,MAA0B,0B,SCO1B,MANA,WACE,OACE,eAAIf,UAAWC,EAAf,sDAEH,C","sources":["webpack://cinesearch/./src/pages/Cast/Cast.module.css?cfbb","pages/Cast/Cast.jsx","webpack://cinesearch/./src/pages/NotFound/NotFound.module.css?7579","pages/NotFound/NotFound.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"castList\":\"Cast_castList__hbalY\",\"castItem\":\"Cast_castItem__XA6Qz\",\"visuallyHidden\":\"Cast_visuallyHidden__8ZISv\",\"castCard\":\"Cast_castCard__QBNdO\",\"name\":\"Cast_name__y8nr9\"};","import { useParams } from 'react-router-dom';\nimport { useQuery } from 'react-query';\nimport { fetchMovieCredits } from 'services/themoviedbApi';\nimport { IMG_URL } from 'variables';\nimport NotFound from 'pages/NotFound/NotFound';\nimport css from './Cast.module.css';\nimport img from '../../img/No-Image.png';\n\nfunction Cast() {\n  const { movieId } = useParams();\n  const { isLoading, data, error } = useQuery(['movies', movieId, 'cast'], () =>\n    fetchMovieCredits(movieId)\n  );\n\n  return (\n    <div>\n      {error && <h1>Error: {error}</h1>}\n      {isLoading && <h1>Loading...</h1>}\n      {!error && !isLoading && (\n        <div>\n          <h2 className={css.visuallyHidden}>Cast</h2>\n          {data.cast && data.cast.length > 0 ? (\n            <ul className={css.castList}>\n              {data.cast.map(({ id, character, name, profile_path }) => (\n                <li key={id} className={css.castItem}>\n                  {profile_path ? (\n                    <img\n                      src={`${IMG_URL}${profile_path}`}\n                      alt=\"poster\"\n                      width={200}\n                      height={140}\n                    />\n                  ) : (\n                    <img src={`${img}`} alt=\"\" width={200} height={140} />\n                  )}\n                  <div className={css.castCard}>\n                    <h3 className={css.name}>{name}</h3>\n                    <p className={css.text}>Character: {character}</p>\n                  </div>\n                </li>\n              ))}\n            </ul>\n          ) : (\n            <NotFound />\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Cast;\n","// extracted by mini-css-extract-plugin\nexport default {\"message\":\"NotFound_message__obVKA\"};","import css from './NotFound.module.css';\n\nfunction NotFound() {\n  return (\n    <h1 className={css.message}>No information about this has been found.</h1>\n  );\n}\n\nexport default NotFound;\n"],"names":["movieId","useParams","useQuery","fetchMovieCredits","isLoading","data","error","className","css","cast","length","map","id","character","name","profile_path","src","IMG_URL","alt","width","height","img","NotFound"],"sourceRoot":""}